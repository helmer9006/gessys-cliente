{"ast":null,"code":"import { createStructuredSelector } from \"reselect\";\nexport const NAME = \"counter\"; //ACTION TYPES\n// const INCREMENT = \"[counter]/INCREMENT\";\n// const INCREMENT = \"[counter]/DECREMENT\";\n//INITIAL STATE\n\nconst initialState = {\n  counter: 0\n}; //REDUCER\n\nexport default ((state = initialState, action = {}) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return { ...state,\n        counter: ++state.counter\n      };\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: --state.counter\n      };\n\n    default:\n      return state;\n  }\n}); //ACTION CREATORS\n\nfunction increment() {\n  return {\n    type: INCREMENT\n  };\n}\n\nfunction decrement() {\n  return {\n    type: DECREMENT\n  };\n}\n\nexport const actionCreators = {\n  increment,\n  decrement\n}; //ACTION TYPES\n\nexport const actionTypes = {\n  INCREMENT,\n  DECREMENT\n};\n\nconst counter = state => state[NAME];\n\nexport const selector = createStructuredSelector({\n  counter\n});","map":{"version":3,"sources":["E:/HELMER/Proyectos/ucm/Gestion/src/features/counter/counter.js"],"names":["createStructuredSelector","NAME","initialState","counter","state","action","type","actionTypes","INCREMENT","DECREMENT","increment","decrement","actionCreators","selector"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,UAAzC;AAEA,OAAO,MAAMC,IAAI,GAAG,SAAb,C,CAEP;AACA;AACA;AAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB,C,CAIA;;AACA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAM,GAAG,EAAhC,KAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,WAAW,CAACC,SAAjB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYD,QAAAA,OAAO,EAAE,EAAEC,KAAK,CAACD;AAA7B,OAAP;;AACF,SAAKI,WAAW,CAACE,SAAjB;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYD,QAAAA,OAAO,EAAE,EAAEC,KAAK,CAACD;AAA7B,OAAP;;AACF;AACE,aAAOC,KAAP;AANJ;AAQD,CATD,E,CAWA;;AACA,SAASM,SAAT,GAAqB;AACnB,SAAO;AAAEJ,IAAAA,IAAI,EAAEE;AAAR,GAAP;AACD;;AAED,SAASG,SAAT,GAAqB;AACnB,SAAO;AAAEL,IAAAA,IAAI,EAAEG;AAAR,GAAP;AACD;;AAED,OAAO,MAAMG,cAAc,GAAG;AAC5BF,EAAAA,SAD4B;AAE5BC,EAAAA;AAF4B,CAAvB,C,CAKP;;AAEA,OAAO,MAAMJ,WAAW,GAAG;AACzBC,EAAAA,SADyB;AAEzBC,EAAAA;AAFyB,CAApB;;AAKP,MAAMN,OAAO,GAAIC,KAAD,IAAWA,KAAK,CAACH,IAAD,CAAhC;;AAEA,OAAO,MAAMY,QAAQ,GAAGb,wBAAwB,CAAC;AAC/CG,EAAAA;AAD+C,CAAD,CAAzC","sourcesContent":["import { createStructuredSelector } from \"reselect\";\r\n\r\nexport const NAME = \"counter\";\r\n\r\n//ACTION TYPES\r\n// const INCREMENT = \"[counter]/INCREMENT\";\r\n// const INCREMENT = \"[counter]/DECREMENT\";\r\n\r\n//INITIAL STATE\r\nconst initialState = {\r\n  counter: 0,\r\n};\r\n\r\n//REDUCER\r\nexport default (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case actionTypes.INCREMENT:\r\n      return { ...state, counter: ++state.counter };\r\n    case actionTypes.DECREMENT:\r\n      return { ...state, counter: --state.counter };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//ACTION CREATORS\r\nfunction increment() {\r\n  return { type: INCREMENT };\r\n}\r\n\r\nfunction decrement() {\r\n  return { type: DECREMENT };\r\n}\r\n\r\nexport const actionCreators = {\r\n  increment,\r\n  decrement,\r\n};\r\n\r\n//ACTION TYPES\r\n\r\nexport const actionTypes = {\r\n  INCREMENT,\r\n  DECREMENT,\r\n};\r\n\r\nconst counter = (state) => state[NAME];\r\n\r\nexport const selector = createStructuredSelector({\r\n  counter,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}