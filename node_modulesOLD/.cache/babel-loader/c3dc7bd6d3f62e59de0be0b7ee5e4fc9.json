{"ast":null,"code":"//IMPORTANDO TYPES\nimport { TRAER_DOCUMENTO, TRAER_DOCUMENTO_EXITO, TRAER_DOCUMENTO_ERROR } from \"../types\";\nimport clienteAxios from \"../config/axios.js\"; //TRAER LOS DOCUMENTOS\n//recibimos el tipo de documento y el numero de documento desde componente documento\n\nexport function traerDocumentosActions(busqueda) {\n  return async dispatch => {\n    dispatch(traerDocumento());\n    let res;\n\n    try {\n      //consulta en la base de datos\n      await clienteAxios.get(`/facturas/${busqueda}`).then(function (res) {\n        console.log(res.data);\n        console.log(res.status);\n        console.log(res.statusText);\n        console.log(res.headers);\n        console.log(res.config);\n        dispatch(traerDocumentoExito(res.data));\n      }); //si todo sale bien, actualizamos state\n    } catch (error) {\n      console.log(error);\n      dispatch(traerDocumentoError(error));\n    }\n  };\n} //FUNCIONES - ACCIONES\n\nconst traerDocumento = documento => ({\n  type: TRAER_DOCUMENTO,\n  payload: true\n}); //si se traer el documento exitosamente del api\n\n\nconst traerDocumentoExito = res => ({\n  type: TRAER_DOCUMENTO_EXITO,\n  payload: res\n}); //si se presenta un error\n\n\nconst traerDocumentoError = error => ({\n  type: TRAER_DOCUMENTO_ERROR,\n  payload: error\n});","map":{"version":3,"sources":["E:/HELMER/Proyectos/ucm/Gestion/src/actions/documentosActions.js"],"names":["TRAER_DOCUMENTO","TRAER_DOCUMENTO_EXITO","TRAER_DOCUMENTO_ERROR","clienteAxios","traerDocumentosActions","busqueda","dispatch","traerDocumento","res","get","then","console","log","data","status","statusText","headers","config","traerDocumentoExito","error","traerDocumentoError","documento","type","payload"],"mappings":"AAAA;AACA,SACEA,eADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,UAJP;AAKA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AAC/C,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AACA,QAAIC,GAAJ;;AACA,QAAI;AACF;AACA,YAAML,YAAY,CAACM,GAAb,CAAkB,aAAYJ,QAAS,EAAvC,EACLK,IADK,CACC,UAAUF,GAAV,EAAc;AACnBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACM,MAAhB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACO,UAAhB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACQ,OAAhB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACS,MAAhB;AACAX,QAAAA,QAAQ,CAACY,mBAAmB,CAACV,GAAG,CAACK,IAAL,CAApB,CAAR;AACD,OARK,CAAN,CAFE,CAYF;AAGD,KAfD,CAeE,OAAOM,KAAP,EAAc;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEFb,MAAAA,QAAQ,CAACc,mBAAmB,CAACD,KAAD,CAApB,CAAR;AACD;AACF,GAvBD;AAwBD,C,CAED;;AAEA,MAAMZ,cAAc,GAAIc,SAAD,KAAgB;AACrCC,EAAAA,IAAI,EAAEtB,eAD+B;AAErCuB,EAAAA,OAAO,EAAE;AAF4B,CAAhB,CAAvB,C,CAKA;;;AACA,MAAML,mBAAmB,GAAIV,GAAD,KAAU;AACpCc,EAAAA,IAAI,EAAErB,qBAD8B;AAEpCsB,EAAAA,OAAO,EAAEf;AAF2B,CAAV,CAA5B,C,CAKA;;;AAEA,MAAMY,mBAAmB,GAAID,KAAD,KAAY;AACtCG,EAAAA,IAAI,EAAEpB,qBADgC;AAEtCqB,EAAAA,OAAO,EAAEJ;AAF6B,CAAZ,CAA5B","sourcesContent":["//IMPORTANDO TYPES\r\nimport {\r\n  TRAER_DOCUMENTO,\r\n  TRAER_DOCUMENTO_EXITO,\r\n  TRAER_DOCUMENTO_ERROR,\r\n} from \"../types\";\r\nimport clienteAxios from \"../config/axios.js\";\r\n\r\n//TRAER LOS DOCUMENTOS\r\n//recibimos el tipo de documento y el numero de documento desde componente documento\r\nexport function traerDocumentosActions(busqueda) {\r\n  return async (dispatch) => {\r\n    dispatch(traerDocumento());\r\n    let res;\r\n    try {\r\n      //consulta en la base de datos\r\n      await clienteAxios.get(`/facturas/${busqueda}`)\r\n      .then( function (res){\r\n        console.log(res.data);\r\n        console.log(res.status);\r\n        console.log(res.statusText);\r\n        console.log(res.headers);\r\n        console.log(res.config);\r\n        dispatch(traerDocumentoExito(res.data));\r\n      })\r\n     \r\n      //si todo sale bien, actualizamos state\r\n     \r\n \r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n      dispatch(traerDocumentoError(error));\r\n    }\r\n  };\r\n}\r\n\r\n//FUNCIONES - ACCIONES\r\n\r\nconst traerDocumento = (documento) => ({\r\n  type: TRAER_DOCUMENTO,\r\n  payload: true,\r\n});\r\n\r\n//si se traer el documento exitosamente del api\r\nconst traerDocumentoExito = (res) => ({\r\n  type: TRAER_DOCUMENTO_EXITO,\r\n  payload: res,\r\n});\r\n\r\n//si se presenta un error\r\n\r\nconst traerDocumentoError = (error) => ({\r\n  type: TRAER_DOCUMENTO_ERROR,\r\n  payload: error,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}